syntax = "proto3";

package networknode.v1;

option go_package = "github.com/ecumenos-social/schemas/proto/gen/networknode/v1";

message IngressServiceRegisterGroupRequest {
}

message IngressServiceRegisterGroupResponse {
}

message IngressServiceModifyGroupRequest {
}

message IngressServiceModifyGroupResponse {
}

message IngressServiceJoinGroupRequest {
}

message IngressServiceJoinGroupResponse {
}

message IngressServiceRequestJoinGroupRequest {
}

message IngressServiceRequestJoinGroupResponse {
}

message IngressServiceRegisterChannelRequest {
}

message IngressServiceRegisterChannelResponse {
}

message IngressServiceModifyChannelRequest {
}

message IngressServiceModifyChannelResponse {
}

message IngressServiceFollowChannelRequest {
}

message IngressServiceFollowChannelResponse {
}

message IngressServiceRequestFollowChannelRequest {
}

message IngressServiceRequestFollowChannelResponse {
}

message IngressServiceInviteToChannelRequest {
}

message IngressServiceInviteToChannelResponse {
}

message IngressServiceReactOnPublicationRequest {
}

message IngressServiceReactOnPublicationResponse {
}

service IngressService {
  rpc RegisterGroup(IngressServiceRegisterGroupRequest) returns (IngressServiceRegisterGroupResponse);
  rpc ModifyGroup(IngressServiceModifyGroupRequest) returns (IngressServiceModifyGroupResponse);
  rpc JoinGroup(IngressServiceJoinGroupRequest) returns (IngressServiceJoinGroupResponse);
  rpc RequestJoinGroup(IngressServiceRequestJoinGroupRequest) returns (IngressServiceRequestJoinGroupResponse);
  rpc RegisterChannel(IngressServiceRegisterChannelRequest) returns (IngressServiceRegisterChannelResponse);
  rpc ModifyChannel(IngressServiceModifyChannelRequest) returns (IngressServiceModifyChannelResponse);
  rpc FollowChannel(IngressServiceFollowChannelRequest) returns (IngressServiceFollowChannelResponse);
  rpc RequestFollowChannel(IngressServiceRequestFollowChannelRequest) returns (IngressServiceRequestFollowChannelResponse);
  rpc InviteToChannel(IngressServiceInviteToChannelRequest) returns (IngressServiceInviteToChannelResponse);
  rpc ReactOnPublication(IngressServiceReactOnPublicationRequest) returns (IngressServiceReactOnPublicationResponse);
}
