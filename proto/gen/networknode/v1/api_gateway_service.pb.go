// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: networknode/v1/api_gateway_service.proto

package v1

import (
	v1 "github.com/ecumenos-social/schemas/proto/gen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApiGatewayServiceGetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string         `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pagination       *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Query            *string        `protobuf:"bytes,4,opt,name=query,proto3,oneof" json:"query,omitempty"`
	MemberedOnly     *bool          `protobuf:"varint,5,opt,name=membered_only,json=memberedOnly,proto3,oneof" json:"membered_only,omitempty"`
}

func (x *ApiGatewayServiceGetGroupsRequest) Reset() {
	*x = ApiGatewayServiceGetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetGroupsRequest) ProtoMessage() {}

func (x *ApiGatewayServiceGetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetGroupsRequest.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{0}
}

func (x *ApiGatewayServiceGetGroupsRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *ApiGatewayServiceGetGroupsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApiGatewayServiceGetGroupsRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ApiGatewayServiceGetGroupsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *ApiGatewayServiceGetGroupsRequest) GetMemberedOnly() bool {
	if x != nil && x.MemberedOnly != nil {
		return *x.MemberedOnly
	}
	return false
}

type ApiGatewayServiceGetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Group `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ApiGatewayServiceGetGroupsResponse) Reset() {
	*x = ApiGatewayServiceGetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetGroupsResponse) ProtoMessage() {}

func (x *ApiGatewayServiceGetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetGroupsResponse.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{1}
}

func (x *ApiGatewayServiceGetGroupsResponse) GetData() []*Group {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiGatewayServiceGetGroupsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ApiGatewayServiceGetGroupByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id               int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ApiGatewayServiceGetGroupByIDRequest) Reset() {
	*x = ApiGatewayServiceGetGroupByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetGroupByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetGroupByIDRequest) ProtoMessage() {}

func (x *ApiGatewayServiceGetGroupByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetGroupByIDRequest.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetGroupByIDRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{2}
}

func (x *ApiGatewayServiceGetGroupByIDRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *ApiGatewayServiceGetGroupByIDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApiGatewayServiceGetGroupByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ApiGatewayServiceGetGroupByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Group `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ApiGatewayServiceGetGroupByIDResponse) Reset() {
	*x = ApiGatewayServiceGetGroupByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetGroupByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetGroupByIDResponse) ProtoMessage() {}

func (x *ApiGatewayServiceGetGroupByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetGroupByIDResponse.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetGroupByIDResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{3}
}

func (x *ApiGatewayServiceGetGroupByIDResponse) GetData() *Group {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiGatewayServiceGetGroupPublicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string         `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pagination       *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Query            *string        `protobuf:"bytes,4,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *ApiGatewayServiceGetGroupPublicationsRequest) Reset() {
	*x = ApiGatewayServiceGetGroupPublicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetGroupPublicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetGroupPublicationsRequest) ProtoMessage() {}

func (x *ApiGatewayServiceGetGroupPublicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetGroupPublicationsRequest.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetGroupPublicationsRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{4}
}

func (x *ApiGatewayServiceGetGroupPublicationsRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *ApiGatewayServiceGetGroupPublicationsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApiGatewayServiceGetGroupPublicationsRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ApiGatewayServiceGetGroupPublicationsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type ApiGatewayServiceGetGroupPublicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *Publication `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ApiGatewayServiceGetGroupPublicationsResponse) Reset() {
	*x = ApiGatewayServiceGetGroupPublicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetGroupPublicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetGroupPublicationsResponse) ProtoMessage() {}

func (x *ApiGatewayServiceGetGroupPublicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetGroupPublicationsResponse.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetGroupPublicationsResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{5}
}

func (x *ApiGatewayServiceGetGroupPublicationsResponse) GetData() *Publication {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiGatewayServiceGetGroupPublicationsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ApiGatewayServiceGetChannelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string         `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pagination       *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Query            *string        `protobuf:"bytes,4,opt,name=query,proto3,oneof" json:"query,omitempty"`
	MemberedOnly     *bool          `protobuf:"varint,5,opt,name=membered_only,json=memberedOnly,proto3,oneof" json:"membered_only,omitempty"`
}

func (x *ApiGatewayServiceGetChannelsRequest) Reset() {
	*x = ApiGatewayServiceGetChannelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetChannelsRequest) ProtoMessage() {}

func (x *ApiGatewayServiceGetChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetChannelsRequest.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetChannelsRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{6}
}

func (x *ApiGatewayServiceGetChannelsRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *ApiGatewayServiceGetChannelsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApiGatewayServiceGetChannelsRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ApiGatewayServiceGetChannelsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *ApiGatewayServiceGetChannelsRequest) GetMemberedOnly() bool {
	if x != nil && x.MemberedOnly != nil {
		return *x.MemberedOnly
	}
	return false
}

type ApiGatewayServiceGetChannelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Channel `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ApiGatewayServiceGetChannelsResponse) Reset() {
	*x = ApiGatewayServiceGetChannelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetChannelsResponse) ProtoMessage() {}

func (x *ApiGatewayServiceGetChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetChannelsResponse.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetChannelsResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{7}
}

func (x *ApiGatewayServiceGetChannelsResponse) GetData() []*Channel {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiGatewayServiceGetChannelsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ApiGatewayServiceGetChannelByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id               int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ApiGatewayServiceGetChannelByIDRequest) Reset() {
	*x = ApiGatewayServiceGetChannelByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetChannelByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetChannelByIDRequest) ProtoMessage() {}

func (x *ApiGatewayServiceGetChannelByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetChannelByIDRequest.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetChannelByIDRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{8}
}

func (x *ApiGatewayServiceGetChannelByIDRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *ApiGatewayServiceGetChannelByIDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApiGatewayServiceGetChannelByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ApiGatewayServiceGetChannelByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Channel `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ApiGatewayServiceGetChannelByIDResponse) Reset() {
	*x = ApiGatewayServiceGetChannelByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetChannelByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetChannelByIDResponse) ProtoMessage() {}

func (x *ApiGatewayServiceGetChannelByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetChannelByIDResponse.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetChannelByIDResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{9}
}

func (x *ApiGatewayServiceGetChannelByIDResponse) GetData() *Channel {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiGatewayServiceGetChannelPublicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string         `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pagination       *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Query            *string        `protobuf:"bytes,4,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *ApiGatewayServiceGetChannelPublicationsRequest) Reset() {
	*x = ApiGatewayServiceGetChannelPublicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetChannelPublicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetChannelPublicationsRequest) ProtoMessage() {}

func (x *ApiGatewayServiceGetChannelPublicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetChannelPublicationsRequest.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetChannelPublicationsRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{10}
}

func (x *ApiGatewayServiceGetChannelPublicationsRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *ApiGatewayServiceGetChannelPublicationsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApiGatewayServiceGetChannelPublicationsRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ApiGatewayServiceGetChannelPublicationsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type ApiGatewayServiceGetChannelPublicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *Publication `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ApiGatewayServiceGetChannelPublicationsResponse) Reset() {
	*x = ApiGatewayServiceGetChannelPublicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetChannelPublicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetChannelPublicationsResponse) ProtoMessage() {}

func (x *ApiGatewayServiceGetChannelPublicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetChannelPublicationsResponse.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetChannelPublicationsResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{11}
}

func (x *ApiGatewayServiceGetChannelPublicationsResponse) GetData() *Publication {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiGatewayServiceGetChannelPublicationsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ApiGatewayServiceGetPublicationByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id               int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ApiGatewayServiceGetPublicationByIDRequest) Reset() {
	*x = ApiGatewayServiceGetPublicationByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetPublicationByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetPublicationByIDRequest) ProtoMessage() {}

func (x *ApiGatewayServiceGetPublicationByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetPublicationByIDRequest.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetPublicationByIDRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{12}
}

func (x *ApiGatewayServiceGetPublicationByIDRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *ApiGatewayServiceGetPublicationByIDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApiGatewayServiceGetPublicationByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ApiGatewayServiceGetPublicationByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *Publication `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ApiGatewayServiceGetPublicationByIDResponse) Reset() {
	*x = ApiGatewayServiceGetPublicationByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetPublicationByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetPublicationByIDResponse) ProtoMessage() {}

func (x *ApiGatewayServiceGetPublicationByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetPublicationByIDResponse.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetPublicationByIDResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{13}
}

func (x *ApiGatewayServiceGetPublicationByIDResponse) GetData() *Publication {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiGatewayServiceGetPublicationByIDResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Cursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt string `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Id        int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Cursor) Reset() {
	*x = Cursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cursor) ProtoMessage() {}

func (x *Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cursor.ProtoReflect.Descriptor instead.
func (*Cursor) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{14}
}

func (x *Cursor) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Cursor) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ApiGatewayServiceGetFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string  `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Cursor           *Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ApiGatewayServiceGetFeedRequest) Reset() {
	*x = ApiGatewayServiceGetFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetFeedRequest) ProtoMessage() {}

func (x *ApiGatewayServiceGetFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetFeedRequest.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetFeedRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{15}
}

func (x *ApiGatewayServiceGetFeedRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *ApiGatewayServiceGetFeedRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApiGatewayServiceGetFeedRequest) GetCursor() *Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type ApiGatewayServiceGetFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *Publication `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	NextCursor *Cursor      `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *ApiGatewayServiceGetFeedResponse) Reset() {
	*x = ApiGatewayServiceGetFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGatewayServiceGetFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGatewayServiceGetFeedResponse) ProtoMessage() {}

func (x *ApiGatewayServiceGetFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_api_gateway_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGatewayServiceGetFeedResponse.ProtoReflect.Descriptor instead.
func (*ApiGatewayServiceGetFeedResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_api_gateway_service_proto_rawDescGZIP(), []int{16}
}

func (x *ApiGatewayServiceGetFeedResponse) GetData() *Publication {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiGatewayServiceGetFeedResponse) GetNextCursor() *Cursor {
	if x != nil {
		return x.NextCursor
	}
	return nil
}

var File_networknode_v1_api_gateway_service_proto protoreflect.FileDescriptor

var file_networknode_v1_api_gateway_service_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e,
	0x6f, 0x64, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x93, 0x02, 0x0a, 0x21, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0c, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x65, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x65, 0x0a, 0x22, 0x41, 0x70, 0x69, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x7a, 0x0a, 0x24, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x25, 0x41,
	0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xe2, 0x01, 0x0a, 0x2c, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x76, 0x0a, 0x2d, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x95, 0x02, 0x0a,
	0x23, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d,
	0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x65, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x69, 0x0a, 0x24, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x7c, 0x0a, 0x26, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a,
	0x27, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe4, 0x01, 0x0a, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x78, 0x0a, 0x2f,
	0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x80, 0x01, 0x0a, 0x2a, 0x41, 0x70, 0x69, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x74, 0x0a, 0x2b, 0x41, 0x70, 0x69,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x37, 0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x1f, 0x41, 0x70, 0x69,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2e, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x22, 0x8c, 0x01, 0x0a, 0x20, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x32,
	0xb2, 0x08, 0x0a, 0x11, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x31, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44, 0x12, 0x34, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3c, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x33, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x12, 0x36, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x3a, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x12, 0x2f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0xc2, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x16, 0x41, 0x70, 0x69,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x6f, 0x73, 0x2d, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2f,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_networknode_v1_api_gateway_service_proto_rawDescOnce sync.Once
	file_networknode_v1_api_gateway_service_proto_rawDescData = file_networknode_v1_api_gateway_service_proto_rawDesc
)

func file_networknode_v1_api_gateway_service_proto_rawDescGZIP() []byte {
	file_networknode_v1_api_gateway_service_proto_rawDescOnce.Do(func() {
		file_networknode_v1_api_gateway_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_networknode_v1_api_gateway_service_proto_rawDescData)
	})
	return file_networknode_v1_api_gateway_service_proto_rawDescData
}

var file_networknode_v1_api_gateway_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_networknode_v1_api_gateway_service_proto_goTypes = []any{
	(*ApiGatewayServiceGetGroupsRequest)(nil),               // 0: networknode.v1.ApiGatewayServiceGetGroupsRequest
	(*ApiGatewayServiceGetGroupsResponse)(nil),              // 1: networknode.v1.ApiGatewayServiceGetGroupsResponse
	(*ApiGatewayServiceGetGroupByIDRequest)(nil),            // 2: networknode.v1.ApiGatewayServiceGetGroupByIDRequest
	(*ApiGatewayServiceGetGroupByIDResponse)(nil),           // 3: networknode.v1.ApiGatewayServiceGetGroupByIDResponse
	(*ApiGatewayServiceGetGroupPublicationsRequest)(nil),    // 4: networknode.v1.ApiGatewayServiceGetGroupPublicationsRequest
	(*ApiGatewayServiceGetGroupPublicationsResponse)(nil),   // 5: networknode.v1.ApiGatewayServiceGetGroupPublicationsResponse
	(*ApiGatewayServiceGetChannelsRequest)(nil),             // 6: networknode.v1.ApiGatewayServiceGetChannelsRequest
	(*ApiGatewayServiceGetChannelsResponse)(nil),            // 7: networknode.v1.ApiGatewayServiceGetChannelsResponse
	(*ApiGatewayServiceGetChannelByIDRequest)(nil),          // 8: networknode.v1.ApiGatewayServiceGetChannelByIDRequest
	(*ApiGatewayServiceGetChannelByIDResponse)(nil),         // 9: networknode.v1.ApiGatewayServiceGetChannelByIDResponse
	(*ApiGatewayServiceGetChannelPublicationsRequest)(nil),  // 10: networknode.v1.ApiGatewayServiceGetChannelPublicationsRequest
	(*ApiGatewayServiceGetChannelPublicationsResponse)(nil), // 11: networknode.v1.ApiGatewayServiceGetChannelPublicationsResponse
	(*ApiGatewayServiceGetPublicationByIDRequest)(nil),      // 12: networknode.v1.ApiGatewayServiceGetPublicationByIDRequest
	(*ApiGatewayServiceGetPublicationByIDResponse)(nil),     // 13: networknode.v1.ApiGatewayServiceGetPublicationByIDResponse
	(*Cursor)(nil),                           // 14: networknode.v1.Cursor
	(*ApiGatewayServiceGetFeedRequest)(nil),  // 15: networknode.v1.ApiGatewayServiceGetFeedRequest
	(*ApiGatewayServiceGetFeedResponse)(nil), // 16: networknode.v1.ApiGatewayServiceGetFeedResponse
	(*v1.Pagination)(nil),                    // 17: common.v1.Pagination
	(*Group)(nil),                            // 18: networknode.v1.Group
	(*Publication)(nil),                      // 19: networknode.v1.Publication
	(*Channel)(nil),                          // 20: networknode.v1.Channel
}
var file_networknode_v1_api_gateway_service_proto_depIdxs = []int32{
	17, // 0: networknode.v1.ApiGatewayServiceGetGroupsRequest.pagination:type_name -> common.v1.Pagination
	18, // 1: networknode.v1.ApiGatewayServiceGetGroupsResponse.data:type_name -> networknode.v1.Group
	18, // 2: networknode.v1.ApiGatewayServiceGetGroupByIDResponse.data:type_name -> networknode.v1.Group
	17, // 3: networknode.v1.ApiGatewayServiceGetGroupPublicationsRequest.pagination:type_name -> common.v1.Pagination
	19, // 4: networknode.v1.ApiGatewayServiceGetGroupPublicationsResponse.data:type_name -> networknode.v1.Publication
	17, // 5: networknode.v1.ApiGatewayServiceGetChannelsRequest.pagination:type_name -> common.v1.Pagination
	20, // 6: networknode.v1.ApiGatewayServiceGetChannelsResponse.data:type_name -> networknode.v1.Channel
	20, // 7: networknode.v1.ApiGatewayServiceGetChannelByIDResponse.data:type_name -> networknode.v1.Channel
	17, // 8: networknode.v1.ApiGatewayServiceGetChannelPublicationsRequest.pagination:type_name -> common.v1.Pagination
	19, // 9: networknode.v1.ApiGatewayServiceGetChannelPublicationsResponse.data:type_name -> networknode.v1.Publication
	19, // 10: networknode.v1.ApiGatewayServiceGetPublicationByIDResponse.data:type_name -> networknode.v1.Publication
	14, // 11: networknode.v1.ApiGatewayServiceGetFeedRequest.cursor:type_name -> networknode.v1.Cursor
	19, // 12: networknode.v1.ApiGatewayServiceGetFeedResponse.data:type_name -> networknode.v1.Publication
	14, // 13: networknode.v1.ApiGatewayServiceGetFeedResponse.next_cursor:type_name -> networknode.v1.Cursor
	0,  // 14: networknode.v1.ApiGatewayService.GetGroups:input_type -> networknode.v1.ApiGatewayServiceGetGroupsRequest
	2,  // 15: networknode.v1.ApiGatewayService.GetGroupByID:input_type -> networknode.v1.ApiGatewayServiceGetGroupByIDRequest
	4,  // 16: networknode.v1.ApiGatewayService.GetGroupPublications:input_type -> networknode.v1.ApiGatewayServiceGetGroupPublicationsRequest
	6,  // 17: networknode.v1.ApiGatewayService.GetChannels:input_type -> networknode.v1.ApiGatewayServiceGetChannelsRequest
	8,  // 18: networknode.v1.ApiGatewayService.GetChannelByID:input_type -> networknode.v1.ApiGatewayServiceGetChannelByIDRequest
	10, // 19: networknode.v1.ApiGatewayService.GetChannelPublications:input_type -> networknode.v1.ApiGatewayServiceGetChannelPublicationsRequest
	12, // 20: networknode.v1.ApiGatewayService.GetPublicationByID:input_type -> networknode.v1.ApiGatewayServiceGetPublicationByIDRequest
	15, // 21: networknode.v1.ApiGatewayService.GetFeed:input_type -> networknode.v1.ApiGatewayServiceGetFeedRequest
	1,  // 22: networknode.v1.ApiGatewayService.GetGroups:output_type -> networknode.v1.ApiGatewayServiceGetGroupsResponse
	3,  // 23: networknode.v1.ApiGatewayService.GetGroupByID:output_type -> networknode.v1.ApiGatewayServiceGetGroupByIDResponse
	5,  // 24: networknode.v1.ApiGatewayService.GetGroupPublications:output_type -> networknode.v1.ApiGatewayServiceGetGroupPublicationsResponse
	7,  // 25: networknode.v1.ApiGatewayService.GetChannels:output_type -> networknode.v1.ApiGatewayServiceGetChannelsResponse
	9,  // 26: networknode.v1.ApiGatewayService.GetChannelByID:output_type -> networknode.v1.ApiGatewayServiceGetChannelByIDResponse
	11, // 27: networknode.v1.ApiGatewayService.GetChannelPublications:output_type -> networknode.v1.ApiGatewayServiceGetChannelPublicationsResponse
	13, // 28: networknode.v1.ApiGatewayService.GetPublicationByID:output_type -> networknode.v1.ApiGatewayServiceGetPublicationByIDResponse
	16, // 29: networknode.v1.ApiGatewayService.GetFeed:output_type -> networknode.v1.ApiGatewayServiceGetFeedResponse
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_networknode_v1_api_gateway_service_proto_init() }
func file_networknode_v1_api_gateway_service_proto_init() {
	if File_networknode_v1_api_gateway_service_proto != nil {
		return
	}
	file_networknode_v1_channel_proto_init()
	file_networknode_v1_group_proto_init()
	file_networknode_v1_publication_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_networknode_v1_api_gateway_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetGroupByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetGroupByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetGroupPublicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetGroupPublicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetChannelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetChannelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetChannelByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetChannelByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetChannelPublicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetChannelPublicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetPublicationByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetPublicationByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Cursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_api_gateway_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ApiGatewayServiceGetFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_networknode_v1_api_gateway_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_networknode_v1_api_gateway_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_networknode_v1_api_gateway_service_proto_msgTypes[6].OneofWrappers = []any{}
	file_networknode_v1_api_gateway_service_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_networknode_v1_api_gateway_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_networknode_v1_api_gateway_service_proto_goTypes,
		DependencyIndexes: file_networknode_v1_api_gateway_service_proto_depIdxs,
		MessageInfos:      file_networknode_v1_api_gateway_service_proto_msgTypes,
	}.Build()
	File_networknode_v1_api_gateway_service_proto = out.File
	file_networknode_v1_api_gateway_service_proto_rawDesc = nil
	file_networknode_v1_api_gateway_service_proto_goTypes = nil
	file_networknode_v1_api_gateway_service_proto_depIdxs = nil
}
