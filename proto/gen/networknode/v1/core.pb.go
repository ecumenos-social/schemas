// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: networknode/v1/core.proto

package v1

import (
	v1 "github.com/ecumenos-social/schemas/proto/gen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoreServiceGetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string         `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pagination       *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Query            *string        `protobuf:"bytes,4,opt,name=query,proto3,oneof" json:"query,omitempty"`
	MemberedOnly     *bool          `protobuf:"varint,5,opt,name=membered_only,json=memberedOnly,proto3,oneof" json:"membered_only,omitempty"`
}

func (x *CoreServiceGetGroupsRequest) Reset() {
	*x = CoreServiceGetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetGroupsRequest) ProtoMessage() {}

func (x *CoreServiceGetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetGroupsRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceGetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{0}
}

func (x *CoreServiceGetGroupsRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *CoreServiceGetGroupsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CoreServiceGetGroupsRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *CoreServiceGetGroupsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *CoreServiceGetGroupsRequest) GetMemberedOnly() bool {
	if x != nil && x.MemberedOnly != nil {
		return *x.MemberedOnly
	}
	return false
}

type CoreServiceGetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Group `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CoreServiceGetGroupsResponse) Reset() {
	*x = CoreServiceGetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetGroupsResponse) ProtoMessage() {}

func (x *CoreServiceGetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetGroupsResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceGetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{1}
}

func (x *CoreServiceGetGroupsResponse) GetData() []*Group {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CoreServiceGetGroupsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CoreServiceGetGroupByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id               int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CoreServiceGetGroupByIDRequest) Reset() {
	*x = CoreServiceGetGroupByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetGroupByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetGroupByIDRequest) ProtoMessage() {}

func (x *CoreServiceGetGroupByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetGroupByIDRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceGetGroupByIDRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{2}
}

func (x *CoreServiceGetGroupByIDRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *CoreServiceGetGroupByIDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CoreServiceGetGroupByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CoreServiceGetGroupByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Group `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CoreServiceGetGroupByIDResponse) Reset() {
	*x = CoreServiceGetGroupByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetGroupByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetGroupByIDResponse) ProtoMessage() {}

func (x *CoreServiceGetGroupByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetGroupByIDResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceGetGroupByIDResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{3}
}

func (x *CoreServiceGetGroupByIDResponse) GetData() *Group {
	if x != nil {
		return x.Data
	}
	return nil
}

type CoreServiceGetGroupPublicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string         `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pagination       *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Query            *string        `protobuf:"bytes,4,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *CoreServiceGetGroupPublicationsRequest) Reset() {
	*x = CoreServiceGetGroupPublicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetGroupPublicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetGroupPublicationsRequest) ProtoMessage() {}

func (x *CoreServiceGetGroupPublicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetGroupPublicationsRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceGetGroupPublicationsRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{4}
}

func (x *CoreServiceGetGroupPublicationsRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *CoreServiceGetGroupPublicationsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CoreServiceGetGroupPublicationsRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *CoreServiceGetGroupPublicationsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type CoreServiceGetGroupPublicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *Publication `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CoreServiceGetGroupPublicationsResponse) Reset() {
	*x = CoreServiceGetGroupPublicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetGroupPublicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetGroupPublicationsResponse) ProtoMessage() {}

func (x *CoreServiceGetGroupPublicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetGroupPublicationsResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceGetGroupPublicationsResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{5}
}

func (x *CoreServiceGetGroupPublicationsResponse) GetData() *Publication {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CoreServiceGetGroupPublicationsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CoreServiceGetChannelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string         `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pagination       *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Query            *string        `protobuf:"bytes,4,opt,name=query,proto3,oneof" json:"query,omitempty"`
	MemberedOnly     *bool          `protobuf:"varint,5,opt,name=membered_only,json=memberedOnly,proto3,oneof" json:"membered_only,omitempty"`
}

func (x *CoreServiceGetChannelsRequest) Reset() {
	*x = CoreServiceGetChannelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetChannelsRequest) ProtoMessage() {}

func (x *CoreServiceGetChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetChannelsRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceGetChannelsRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{6}
}

func (x *CoreServiceGetChannelsRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *CoreServiceGetChannelsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CoreServiceGetChannelsRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *CoreServiceGetChannelsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *CoreServiceGetChannelsRequest) GetMemberedOnly() bool {
	if x != nil && x.MemberedOnly != nil {
		return *x.MemberedOnly
	}
	return false
}

type CoreServiceGetChannelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Channel `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CoreServiceGetChannelsResponse) Reset() {
	*x = CoreServiceGetChannelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetChannelsResponse) ProtoMessage() {}

func (x *CoreServiceGetChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetChannelsResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceGetChannelsResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{7}
}

func (x *CoreServiceGetChannelsResponse) GetData() []*Channel {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CoreServiceGetChannelsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CoreServiceGetChannelByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id               int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CoreServiceGetChannelByIDRequest) Reset() {
	*x = CoreServiceGetChannelByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetChannelByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetChannelByIDRequest) ProtoMessage() {}

func (x *CoreServiceGetChannelByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetChannelByIDRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceGetChannelByIDRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{8}
}

func (x *CoreServiceGetChannelByIDRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *CoreServiceGetChannelByIDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CoreServiceGetChannelByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CoreServiceGetChannelByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Channel `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CoreServiceGetChannelByIDResponse) Reset() {
	*x = CoreServiceGetChannelByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetChannelByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetChannelByIDResponse) ProtoMessage() {}

func (x *CoreServiceGetChannelByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetChannelByIDResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceGetChannelByIDResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{9}
}

func (x *CoreServiceGetChannelByIDResponse) GetData() *Channel {
	if x != nil {
		return x.Data
	}
	return nil
}

type CoreServiceGetChannelPublicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string         `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pagination       *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Query            *string        `protobuf:"bytes,4,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *CoreServiceGetChannelPublicationsRequest) Reset() {
	*x = CoreServiceGetChannelPublicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetChannelPublicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetChannelPublicationsRequest) ProtoMessage() {}

func (x *CoreServiceGetChannelPublicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetChannelPublicationsRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceGetChannelPublicationsRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{10}
}

func (x *CoreServiceGetChannelPublicationsRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *CoreServiceGetChannelPublicationsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CoreServiceGetChannelPublicationsRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *CoreServiceGetChannelPublicationsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type CoreServiceGetChannelPublicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *Publication `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CoreServiceGetChannelPublicationsResponse) Reset() {
	*x = CoreServiceGetChannelPublicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetChannelPublicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetChannelPublicationsResponse) ProtoMessage() {}

func (x *CoreServiceGetChannelPublicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetChannelPublicationsResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceGetChannelPublicationsResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{11}
}

func (x *CoreServiceGetChannelPublicationsResponse) GetData() *Publication {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CoreServiceGetChannelPublicationsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CoreServiceGetPublicationByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id               int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CoreServiceGetPublicationByIDRequest) Reset() {
	*x = CoreServiceGetPublicationByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetPublicationByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetPublicationByIDRequest) ProtoMessage() {}

func (x *CoreServiceGetPublicationByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetPublicationByIDRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceGetPublicationByIDRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{12}
}

func (x *CoreServiceGetPublicationByIDRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *CoreServiceGetPublicationByIDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CoreServiceGetPublicationByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CoreServiceGetPublicationByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *Publication `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CoreServiceGetPublicationByIDResponse) Reset() {
	*x = CoreServiceGetPublicationByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetPublicationByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetPublicationByIDResponse) ProtoMessage() {}

func (x *CoreServiceGetPublicationByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetPublicationByIDResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceGetPublicationByIDResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{13}
}

func (x *CoreServiceGetPublicationByIDResponse) GetData() *Publication {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CoreServiceGetPublicationByIDResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Cursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt string `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Id        int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Cursor) Reset() {
	*x = Cursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cursor) ProtoMessage() {}

func (x *Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cursor.ProtoReflect.Descriptor instead.
func (*Cursor) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{14}
}

func (x *Cursor) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Cursor) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CoreServiceGetFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMacAddress string  `protobuf:"bytes,1,opt,name=remote_mac_address,json=remoteMacAddress,proto3" json:"remote_mac_address,omitempty"`
	Token            string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Cursor           *Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *CoreServiceGetFeedRequest) Reset() {
	*x = CoreServiceGetFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetFeedRequest) ProtoMessage() {}

func (x *CoreServiceGetFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetFeedRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceGetFeedRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{15}
}

func (x *CoreServiceGetFeedRequest) GetRemoteMacAddress() string {
	if x != nil {
		return x.RemoteMacAddress
	}
	return ""
}

func (x *CoreServiceGetFeedRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CoreServiceGetFeedRequest) GetCursor() *Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type CoreServiceGetFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *Publication `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	NextCursor *Cursor      `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *CoreServiceGetFeedResponse) Reset() {
	*x = CoreServiceGetFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceGetFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceGetFeedResponse) ProtoMessage() {}

func (x *CoreServiceGetFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceGetFeedResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceGetFeedResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{16}
}

func (x *CoreServiceGetFeedResponse) GetData() *Publication {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CoreServiceGetFeedResponse) GetNextCursor() *Cursor {
	if x != nil {
		return x.NextCursor
	}
	return nil
}

type CoreServiceRegisterGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceRegisterGroupRequest) Reset() {
	*x = CoreServiceRegisterGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceRegisterGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceRegisterGroupRequest) ProtoMessage() {}

func (x *CoreServiceRegisterGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceRegisterGroupRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceRegisterGroupRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{17}
}

type CoreServiceRegisterGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceRegisterGroupResponse) Reset() {
	*x = CoreServiceRegisterGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceRegisterGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceRegisterGroupResponse) ProtoMessage() {}

func (x *CoreServiceRegisterGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceRegisterGroupResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceRegisterGroupResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{18}
}

type CoreServiceModifyGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceModifyGroupRequest) Reset() {
	*x = CoreServiceModifyGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceModifyGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceModifyGroupRequest) ProtoMessage() {}

func (x *CoreServiceModifyGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceModifyGroupRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceModifyGroupRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{19}
}

type CoreServiceModifyGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceModifyGroupResponse) Reset() {
	*x = CoreServiceModifyGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceModifyGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceModifyGroupResponse) ProtoMessage() {}

func (x *CoreServiceModifyGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceModifyGroupResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceModifyGroupResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{20}
}

type CoreServiceJoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceJoinGroupRequest) Reset() {
	*x = CoreServiceJoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceJoinGroupRequest) ProtoMessage() {}

func (x *CoreServiceJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{21}
}

type CoreServiceJoinGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceJoinGroupResponse) Reset() {
	*x = CoreServiceJoinGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceJoinGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceJoinGroupResponse) ProtoMessage() {}

func (x *CoreServiceJoinGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceJoinGroupResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceJoinGroupResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{22}
}

type CoreServiceRequestJoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceRequestJoinGroupRequest) Reset() {
	*x = CoreServiceRequestJoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceRequestJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceRequestJoinGroupRequest) ProtoMessage() {}

func (x *CoreServiceRequestJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceRequestJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceRequestJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{23}
}

type CoreServiceRequestJoinGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceRequestJoinGroupResponse) Reset() {
	*x = CoreServiceRequestJoinGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceRequestJoinGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceRequestJoinGroupResponse) ProtoMessage() {}

func (x *CoreServiceRequestJoinGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceRequestJoinGroupResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceRequestJoinGroupResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{24}
}

type CoreServiceRegisterChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceRegisterChannelRequest) Reset() {
	*x = CoreServiceRegisterChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceRegisterChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceRegisterChannelRequest) ProtoMessage() {}

func (x *CoreServiceRegisterChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceRegisterChannelRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceRegisterChannelRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{25}
}

type CoreServiceRegisterChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceRegisterChannelResponse) Reset() {
	*x = CoreServiceRegisterChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceRegisterChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceRegisterChannelResponse) ProtoMessage() {}

func (x *CoreServiceRegisterChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceRegisterChannelResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceRegisterChannelResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{26}
}

type CoreServiceModifyChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceModifyChannelRequest) Reset() {
	*x = CoreServiceModifyChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceModifyChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceModifyChannelRequest) ProtoMessage() {}

func (x *CoreServiceModifyChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceModifyChannelRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceModifyChannelRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{27}
}

type CoreServiceModifyChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceModifyChannelResponse) Reset() {
	*x = CoreServiceModifyChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceModifyChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceModifyChannelResponse) ProtoMessage() {}

func (x *CoreServiceModifyChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceModifyChannelResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceModifyChannelResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{28}
}

type CoreServiceFollowChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceFollowChannelRequest) Reset() {
	*x = CoreServiceFollowChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceFollowChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceFollowChannelRequest) ProtoMessage() {}

func (x *CoreServiceFollowChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceFollowChannelRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceFollowChannelRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{29}
}

type CoreServiceFollowChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceFollowChannelResponse) Reset() {
	*x = CoreServiceFollowChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceFollowChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceFollowChannelResponse) ProtoMessage() {}

func (x *CoreServiceFollowChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceFollowChannelResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceFollowChannelResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{30}
}

type CoreServiceRequestFollowChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceRequestFollowChannelRequest) Reset() {
	*x = CoreServiceRequestFollowChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceRequestFollowChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceRequestFollowChannelRequest) ProtoMessage() {}

func (x *CoreServiceRequestFollowChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceRequestFollowChannelRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceRequestFollowChannelRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{31}
}

type CoreServiceRequestFollowChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceRequestFollowChannelResponse) Reset() {
	*x = CoreServiceRequestFollowChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceRequestFollowChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceRequestFollowChannelResponse) ProtoMessage() {}

func (x *CoreServiceRequestFollowChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceRequestFollowChannelResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceRequestFollowChannelResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{32}
}

type CoreServiceInviteToChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceInviteToChannelRequest) Reset() {
	*x = CoreServiceInviteToChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceInviteToChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceInviteToChannelRequest) ProtoMessage() {}

func (x *CoreServiceInviteToChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceInviteToChannelRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceInviteToChannelRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{33}
}

type CoreServiceInviteToChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceInviteToChannelResponse) Reset() {
	*x = CoreServiceInviteToChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceInviteToChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceInviteToChannelResponse) ProtoMessage() {}

func (x *CoreServiceInviteToChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceInviteToChannelResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceInviteToChannelResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{34}
}

type CoreServiceReactOnPublicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceReactOnPublicationRequest) Reset() {
	*x = CoreServiceReactOnPublicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceReactOnPublicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceReactOnPublicationRequest) ProtoMessage() {}

func (x *CoreServiceReactOnPublicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceReactOnPublicationRequest.ProtoReflect.Descriptor instead.
func (*CoreServiceReactOnPublicationRequest) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{35}
}

type CoreServiceReactOnPublicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoreServiceReactOnPublicationResponse) Reset() {
	*x = CoreServiceReactOnPublicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networknode_v1_core_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreServiceReactOnPublicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreServiceReactOnPublicationResponse) ProtoMessage() {}

func (x *CoreServiceReactOnPublicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networknode_v1_core_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreServiceReactOnPublicationResponse.ProtoReflect.Descriptor instead.
func (*CoreServiceReactOnPublicationResponse) Descriptor() ([]byte, []int) {
	return file_networknode_v1_core_proto_rawDescGZIP(), []int{36}
}

var File_networknode_v1_core_proto protoreflect.FileDescriptor

var file_networknode_v1_core_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f,
	0x64, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x02, 0x0a, 0x1b, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65,
	0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x22, 0x5f, 0x0a, 0x1c, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x74, 0x0a, 0x1e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x1f, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x26, 0x43, 0x6f, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x70, 0x0a, 0x27, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8f, 0x02, 0x0a, 0x1d, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d,
	0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x63, 0x0a, 0x1e, 0x43,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x76, 0x0a, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d,
	0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x21, 0x43, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xde, 0x01, 0x0a, 0x28, 0x43,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x72, 0x0a, 0x29, 0x43,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x7a, 0x0a, 0x24, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x25, 0x43,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x37, 0x0a, 0x06, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22,
	0x21, 0x0a, 0x1f, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x25,
	0x0a, 0x23, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x0a, 0x1f, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x0a, 0x26, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x27, 0x43, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x0a, 0x24, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x25, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xfc, 0x10, 0x0a, 0x0b, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x66, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x2b, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x36, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x2d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x75, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x30, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x38, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x34,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a,
	0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6c, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x2d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2b, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x31, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x2f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x72, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x2f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x36, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x78, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x31, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb5,
	0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x43, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x6f, 0x73, 0x2d, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x4e, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6e, 0x6f, 0x64, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x6e, 0x6f, 0x64, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6e, 0x6f,
	0x64, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_networknode_v1_core_proto_rawDescOnce sync.Once
	file_networknode_v1_core_proto_rawDescData = file_networknode_v1_core_proto_rawDesc
)

func file_networknode_v1_core_proto_rawDescGZIP() []byte {
	file_networknode_v1_core_proto_rawDescOnce.Do(func() {
		file_networknode_v1_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_networknode_v1_core_proto_rawDescData)
	})
	return file_networknode_v1_core_proto_rawDescData
}

var file_networknode_v1_core_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_networknode_v1_core_proto_goTypes = []any{
	(*CoreServiceGetGroupsRequest)(nil),               // 0: networknode.v1.CoreServiceGetGroupsRequest
	(*CoreServiceGetGroupsResponse)(nil),              // 1: networknode.v1.CoreServiceGetGroupsResponse
	(*CoreServiceGetGroupByIDRequest)(nil),            // 2: networknode.v1.CoreServiceGetGroupByIDRequest
	(*CoreServiceGetGroupByIDResponse)(nil),           // 3: networknode.v1.CoreServiceGetGroupByIDResponse
	(*CoreServiceGetGroupPublicationsRequest)(nil),    // 4: networknode.v1.CoreServiceGetGroupPublicationsRequest
	(*CoreServiceGetGroupPublicationsResponse)(nil),   // 5: networknode.v1.CoreServiceGetGroupPublicationsResponse
	(*CoreServiceGetChannelsRequest)(nil),             // 6: networknode.v1.CoreServiceGetChannelsRequest
	(*CoreServiceGetChannelsResponse)(nil),            // 7: networknode.v1.CoreServiceGetChannelsResponse
	(*CoreServiceGetChannelByIDRequest)(nil),          // 8: networknode.v1.CoreServiceGetChannelByIDRequest
	(*CoreServiceGetChannelByIDResponse)(nil),         // 9: networknode.v1.CoreServiceGetChannelByIDResponse
	(*CoreServiceGetChannelPublicationsRequest)(nil),  // 10: networknode.v1.CoreServiceGetChannelPublicationsRequest
	(*CoreServiceGetChannelPublicationsResponse)(nil), // 11: networknode.v1.CoreServiceGetChannelPublicationsResponse
	(*CoreServiceGetPublicationByIDRequest)(nil),      // 12: networknode.v1.CoreServiceGetPublicationByIDRequest
	(*CoreServiceGetPublicationByIDResponse)(nil),     // 13: networknode.v1.CoreServiceGetPublicationByIDResponse
	(*Cursor)(nil),                                  // 14: networknode.v1.Cursor
	(*CoreServiceGetFeedRequest)(nil),               // 15: networknode.v1.CoreServiceGetFeedRequest
	(*CoreServiceGetFeedResponse)(nil),              // 16: networknode.v1.CoreServiceGetFeedResponse
	(*CoreServiceRegisterGroupRequest)(nil),         // 17: networknode.v1.CoreServiceRegisterGroupRequest
	(*CoreServiceRegisterGroupResponse)(nil),        // 18: networknode.v1.CoreServiceRegisterGroupResponse
	(*CoreServiceModifyGroupRequest)(nil),           // 19: networknode.v1.CoreServiceModifyGroupRequest
	(*CoreServiceModifyGroupResponse)(nil),          // 20: networknode.v1.CoreServiceModifyGroupResponse
	(*CoreServiceJoinGroupRequest)(nil),             // 21: networknode.v1.CoreServiceJoinGroupRequest
	(*CoreServiceJoinGroupResponse)(nil),            // 22: networknode.v1.CoreServiceJoinGroupResponse
	(*CoreServiceRequestJoinGroupRequest)(nil),      // 23: networknode.v1.CoreServiceRequestJoinGroupRequest
	(*CoreServiceRequestJoinGroupResponse)(nil),     // 24: networknode.v1.CoreServiceRequestJoinGroupResponse
	(*CoreServiceRegisterChannelRequest)(nil),       // 25: networknode.v1.CoreServiceRegisterChannelRequest
	(*CoreServiceRegisterChannelResponse)(nil),      // 26: networknode.v1.CoreServiceRegisterChannelResponse
	(*CoreServiceModifyChannelRequest)(nil),         // 27: networknode.v1.CoreServiceModifyChannelRequest
	(*CoreServiceModifyChannelResponse)(nil),        // 28: networknode.v1.CoreServiceModifyChannelResponse
	(*CoreServiceFollowChannelRequest)(nil),         // 29: networknode.v1.CoreServiceFollowChannelRequest
	(*CoreServiceFollowChannelResponse)(nil),        // 30: networknode.v1.CoreServiceFollowChannelResponse
	(*CoreServiceRequestFollowChannelRequest)(nil),  // 31: networknode.v1.CoreServiceRequestFollowChannelRequest
	(*CoreServiceRequestFollowChannelResponse)(nil), // 32: networknode.v1.CoreServiceRequestFollowChannelResponse
	(*CoreServiceInviteToChannelRequest)(nil),       // 33: networknode.v1.CoreServiceInviteToChannelRequest
	(*CoreServiceInviteToChannelResponse)(nil),      // 34: networknode.v1.CoreServiceInviteToChannelResponse
	(*CoreServiceReactOnPublicationRequest)(nil),    // 35: networknode.v1.CoreServiceReactOnPublicationRequest
	(*CoreServiceReactOnPublicationResponse)(nil),   // 36: networknode.v1.CoreServiceReactOnPublicationResponse
	(*v1.Pagination)(nil),                           // 37: common.v1.Pagination
	(*Group)(nil),                                   // 38: networknode.v1.Group
	(*Publication)(nil),                             // 39: networknode.v1.Publication
	(*Channel)(nil),                                 // 40: networknode.v1.Channel
}
var file_networknode_v1_core_proto_depIdxs = []int32{
	37, // 0: networknode.v1.CoreServiceGetGroupsRequest.pagination:type_name -> common.v1.Pagination
	38, // 1: networknode.v1.CoreServiceGetGroupsResponse.data:type_name -> networknode.v1.Group
	38, // 2: networknode.v1.CoreServiceGetGroupByIDResponse.data:type_name -> networknode.v1.Group
	37, // 3: networknode.v1.CoreServiceGetGroupPublicationsRequest.pagination:type_name -> common.v1.Pagination
	39, // 4: networknode.v1.CoreServiceGetGroupPublicationsResponse.data:type_name -> networknode.v1.Publication
	37, // 5: networknode.v1.CoreServiceGetChannelsRequest.pagination:type_name -> common.v1.Pagination
	40, // 6: networknode.v1.CoreServiceGetChannelsResponse.data:type_name -> networknode.v1.Channel
	40, // 7: networknode.v1.CoreServiceGetChannelByIDResponse.data:type_name -> networknode.v1.Channel
	37, // 8: networknode.v1.CoreServiceGetChannelPublicationsRequest.pagination:type_name -> common.v1.Pagination
	39, // 9: networknode.v1.CoreServiceGetChannelPublicationsResponse.data:type_name -> networknode.v1.Publication
	39, // 10: networknode.v1.CoreServiceGetPublicationByIDResponse.data:type_name -> networknode.v1.Publication
	14, // 11: networknode.v1.CoreServiceGetFeedRequest.cursor:type_name -> networknode.v1.Cursor
	39, // 12: networknode.v1.CoreServiceGetFeedResponse.data:type_name -> networknode.v1.Publication
	14, // 13: networknode.v1.CoreServiceGetFeedResponse.next_cursor:type_name -> networknode.v1.Cursor
	0,  // 14: networknode.v1.CoreService.GetGroups:input_type -> networknode.v1.CoreServiceGetGroupsRequest
	2,  // 15: networknode.v1.CoreService.GetGroupByID:input_type -> networknode.v1.CoreServiceGetGroupByIDRequest
	4,  // 16: networknode.v1.CoreService.GetGroupPublications:input_type -> networknode.v1.CoreServiceGetGroupPublicationsRequest
	6,  // 17: networknode.v1.CoreService.GetChannels:input_type -> networknode.v1.CoreServiceGetChannelsRequest
	8,  // 18: networknode.v1.CoreService.GetChannelByID:input_type -> networknode.v1.CoreServiceGetChannelByIDRequest
	10, // 19: networknode.v1.CoreService.GetChannelPublications:input_type -> networknode.v1.CoreServiceGetChannelPublicationsRequest
	12, // 20: networknode.v1.CoreService.GetPublicationByID:input_type -> networknode.v1.CoreServiceGetPublicationByIDRequest
	15, // 21: networknode.v1.CoreService.GetFeed:input_type -> networknode.v1.CoreServiceGetFeedRequest
	17, // 22: networknode.v1.CoreService.RegisterGroup:input_type -> networknode.v1.CoreServiceRegisterGroupRequest
	19, // 23: networknode.v1.CoreService.ModifyGroup:input_type -> networknode.v1.CoreServiceModifyGroupRequest
	21, // 24: networknode.v1.CoreService.JoinGroup:input_type -> networknode.v1.CoreServiceJoinGroupRequest
	23, // 25: networknode.v1.CoreService.RequestJoinGroup:input_type -> networknode.v1.CoreServiceRequestJoinGroupRequest
	25, // 26: networknode.v1.CoreService.RegisterChannel:input_type -> networknode.v1.CoreServiceRegisterChannelRequest
	27, // 27: networknode.v1.CoreService.ModifyChannel:input_type -> networknode.v1.CoreServiceModifyChannelRequest
	29, // 28: networknode.v1.CoreService.FollowChannel:input_type -> networknode.v1.CoreServiceFollowChannelRequest
	31, // 29: networknode.v1.CoreService.RequestFollowChannel:input_type -> networknode.v1.CoreServiceRequestFollowChannelRequest
	33, // 30: networknode.v1.CoreService.InviteToChannel:input_type -> networknode.v1.CoreServiceInviteToChannelRequest
	35, // 31: networknode.v1.CoreService.ReactOnPublication:input_type -> networknode.v1.CoreServiceReactOnPublicationRequest
	1,  // 32: networknode.v1.CoreService.GetGroups:output_type -> networknode.v1.CoreServiceGetGroupsResponse
	3,  // 33: networknode.v1.CoreService.GetGroupByID:output_type -> networknode.v1.CoreServiceGetGroupByIDResponse
	5,  // 34: networknode.v1.CoreService.GetGroupPublications:output_type -> networknode.v1.CoreServiceGetGroupPublicationsResponse
	7,  // 35: networknode.v1.CoreService.GetChannels:output_type -> networknode.v1.CoreServiceGetChannelsResponse
	9,  // 36: networknode.v1.CoreService.GetChannelByID:output_type -> networknode.v1.CoreServiceGetChannelByIDResponse
	11, // 37: networknode.v1.CoreService.GetChannelPublications:output_type -> networknode.v1.CoreServiceGetChannelPublicationsResponse
	13, // 38: networknode.v1.CoreService.GetPublicationByID:output_type -> networknode.v1.CoreServiceGetPublicationByIDResponse
	16, // 39: networknode.v1.CoreService.GetFeed:output_type -> networknode.v1.CoreServiceGetFeedResponse
	18, // 40: networknode.v1.CoreService.RegisterGroup:output_type -> networknode.v1.CoreServiceRegisterGroupResponse
	20, // 41: networknode.v1.CoreService.ModifyGroup:output_type -> networknode.v1.CoreServiceModifyGroupResponse
	22, // 42: networknode.v1.CoreService.JoinGroup:output_type -> networknode.v1.CoreServiceJoinGroupResponse
	24, // 43: networknode.v1.CoreService.RequestJoinGroup:output_type -> networknode.v1.CoreServiceRequestJoinGroupResponse
	26, // 44: networknode.v1.CoreService.RegisterChannel:output_type -> networknode.v1.CoreServiceRegisterChannelResponse
	28, // 45: networknode.v1.CoreService.ModifyChannel:output_type -> networknode.v1.CoreServiceModifyChannelResponse
	30, // 46: networknode.v1.CoreService.FollowChannel:output_type -> networknode.v1.CoreServiceFollowChannelResponse
	32, // 47: networknode.v1.CoreService.RequestFollowChannel:output_type -> networknode.v1.CoreServiceRequestFollowChannelResponse
	34, // 48: networknode.v1.CoreService.InviteToChannel:output_type -> networknode.v1.CoreServiceInviteToChannelResponse
	36, // 49: networknode.v1.CoreService.ReactOnPublication:output_type -> networknode.v1.CoreServiceReactOnPublicationResponse
	32, // [32:50] is the sub-list for method output_type
	14, // [14:32] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_networknode_v1_core_proto_init() }
func file_networknode_v1_core_proto_init() {
	if File_networknode_v1_core_proto != nil {
		return
	}
	file_networknode_v1_channel_proto_init()
	file_networknode_v1_group_proto_init()
	file_networknode_v1_publication_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_networknode_v1_core_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetGroupByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetGroupByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetGroupPublicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetGroupPublicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetChannelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetChannelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetChannelByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetChannelByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetChannelPublicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetChannelPublicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetPublicationByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetPublicationByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Cursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceGetFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceRegisterGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceRegisterGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceModifyGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceModifyGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceJoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceJoinGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceRequestJoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceRequestJoinGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceRegisterChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceRegisterChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceModifyChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceModifyChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceFollowChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceFollowChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceRequestFollowChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceRequestFollowChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceInviteToChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceInviteToChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceReactOnPublicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networknode_v1_core_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CoreServiceReactOnPublicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_networknode_v1_core_proto_msgTypes[0].OneofWrappers = []any{}
	file_networknode_v1_core_proto_msgTypes[4].OneofWrappers = []any{}
	file_networknode_v1_core_proto_msgTypes[6].OneofWrappers = []any{}
	file_networknode_v1_core_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_networknode_v1_core_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_networknode_v1_core_proto_goTypes,
		DependencyIndexes: file_networknode_v1_core_proto_depIdxs,
		MessageInfos:      file_networknode_v1_core_proto_msgTypes,
	}.Build()
	File_networknode_v1_core_proto = out.File
	file_networknode_v1_core_proto_rawDesc = nil
	file_networknode_v1_core_proto_goTypes = nil
	file_networknode_v1_core_proto_depIdxs = nil
}
