syntax = "proto3";

package personaldatanode.v1;

option go_package = "github.com/ecumenos-social/schemas/proto/gen/personaldatanode/v1";

import "common/v1/pagination.proto";
import "personaldatanode/v1/blockchain_block.proto";
import "personaldatanode/v1/blockchain_entity.proto";
import "personaldatanode/v1/blockchain_transaction.proto";

message BlockchainPeerServiceCreateTransactionRequest {
  personaldatanode.v1.BlockchainTransaction data = 1;
}

message BlockchainPeerServiceCreateTransactionResponse {
  bool success = 1;
}

message BlockchainPeerServiceValidateRequest {
  personaldatanode.v1.BlockchainBlock data = 1;
}

message BlockchainPeerServiceValidateResponse {
  bool valid = 1;
}

message BlockchainPeerServiceGetBlocksRequest {
  optional string from = 1;
  optional string to = 2;
  optional common.v1.Pagination pagination = 3;
}

message BlockchainPeerServiceGetBlocksResponse {
  repeated personaldatanode.v1.BlockchainBlock data = 1;
  int64 total = 2;
}

message BlockchainPeerServiceGetEntitiesRequest {
  repeated int64 ids = 1;
  optional common.v1.Pagination pagination = 2;
}

message BlockchainPeerServiceGetEntitiesResponse {
  repeated personaldatanode.v1.BlockchainEntity data = 1;
  int64 total = 2;
}

service BlockchainPeerService {
  rpc CreateTransaction(BlockchainPeerServiceCreateTransactionRequest) returns (BlockchainPeerServiceCreateTransactionResponse);
  rpc Validate(BlockchainPeerServiceValidateRequest) returns (BlockchainPeerServiceValidateResponse);
  rpc GetBlocks(BlockchainPeerServiceGetBlocksRequest) returns (BlockchainPeerServiceGetBlocksResponse);
  rpc GetEntities(BlockchainPeerServiceGetEntitiesRequest) returns (BlockchainPeerServiceGetEntitiesResponse);
}
